name: Run JMeter ReqRes Tests

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '15 8 * * *'  # 15:15 WIB (UTC+7)

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
    - name: üîΩ Checkout Repository
      uses: actions/checkout@v3

    - name: ‚òïÔ∏è Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: üîß Install JMeter
      run: |
        wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
        tar -xzf apache-jmeter-5.6.3.tgz
        echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.3" >> $GITHUB_ENV

    - name: ‚ñ∂Ô∏è Run JMeter Test Plan
      shell: bash
      run: |
        REPORT_DIR="logs/html-report-$(date -u +%Y%m%d-%H%M)"
        mkdir -p "$REPORT_DIR"
        set +e
        "${JMETER_HOME}/bin/jmeter" -n \
          -t tests/cdc-reqres.jmx \
          -l logs/result.jtl \
          -q configs/secret.properties
        JMETER_EXIT=$?
        set -e
        if [ "$JMETER_EXIT" -eq 0 ] && grep -q '<sampleResult' logs/result.jtl; then
          "${JMETER_HOME}/bin/jmeter" -g logs/result.jtl -o "$REPORT_DIR"
        else
          echo "‚ö†Ô∏è Skipping HTML generation: test failed or no samples"
        fi
        echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV

    - name: üì§ Upload JMeter Results & Report
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-report
        path: |
          logs/result.jtl
          ${{ env.REPORT_DIR }}/
        compression-level: 6
        if-no-files-found: warn

    - name: üì¢ Telegram Notification (optional)
      if: always()
      run: |
        STATUS="‚úÖ JMeter test passed"
        [ "${{ job.status }}" != "success" ] && STATUS="‚ùå JMeter test failed"

        TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M UTC')
        RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        MESSAGE=$(cat <<EOF
        $STATUS

        üïí Completed at: $TIMESTAMP
        üîó [View GitHub Run]($RUN_URL)
        üìä Artifacts: .jtl and HTML report
        EOF
        )
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d parse_mode="Markdown" \
          --data-urlencode "text=$MESSAGE"